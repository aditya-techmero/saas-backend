{
    "nodes": [
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "event": "rowUpdate",
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheetsTrigger",
        "typeVersion": 1,
        "position": [
          -4900,
          2885
        ],
        "id": "61bb45e9-1974-44d8-9a6d-956f30f702bf",
        "name": "Google Sheets Trigger3",
        "credentials": {
          "googleSheetsTriggerOAuth2Api": {
            "id": "9GNyGJsDRYdj8wOd",
            "name": "Google Sheets Trigger account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "a74410bc-a05c-45dc-8dcd-a86427f0bf55",
                "leftValue": "={{ $json.outlineApproved }}",
                "rightValue": "Approved",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -4020,
          2985
        ],
        "id": "0c06f6ca-f6b4-4b41-ad86-d6c49f72be99",
        "name": "If3"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -3800,
          2985
        ],
        "id": "b6e3ae8d-196d-40e7-a35b-8dc8ab3e7cb7",
        "name": "No Operation, do nothing8"
      },
      {
        "parameters": {
          "fieldToSplitOut": "chapters, content.chapters",
          "include": "allOtherFields",
          "options": {}
        },
        "id": "4504a720-ac36-43eb-b05c-4b3bcbb8396e",
        "name": "Split Out1",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          -3580,
          3260
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "title": "={{ $json.post_title }}",
          "additionalFields": {
            "content": "={{ $json.post_content }}"
          }
        },
        "type": "n8n-nodes-base.wordpress",
        "typeVersion": 1,
        "position": [
          -1288,
          2860
        ],
        "id": "2e75c1e6-f47c-453f-9a38-fd80d8461406",
        "name": "Wordpress1",
        "credentials": {
          "wordpressApi": {
            "id": "cPZl3LSGHW6sIe7Z",
            "name": "Wordpress account"
          }
        }
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=##Outline {{ $json.chaptersString }}  **detailsToInclude**:{{ $('If3').first().json.detailsToInclude }} \n\n## Strict Instruction:\nCarefully follow every rule and section below. Do not deviate from formatting or structure.\n\n\n## Take outline from the user input\n\n1. **Must Include**: Semantic keywords in the content of particular headings.\n\n2. **Content Creation Prompt**\n   2.1 **Tone & Voice**:\n**toneOfVoice**:{{ $('If3').first().json.toneOfVoice }} **pointOfView**:{{ $('If3').first().json.pointOfView }} **textReadability**:{{ $('If3').first().json.textReadability }}\n\n3. **Content Requirements**:\n**MUST: EACH PARAGRAPH CAN ONLY HAVE THREE/FOUR LINES OR LESS THAN 65 WORDCOUNT**\n   3.1 **Include**:\n      -End each <h2> section with:\n      - One actionable “cool tip”\n      - Followed by a <p> summary of that section (3-4 lines)\n      - Add steps, list, tables to give content visual break\n      - If an abbreviation is given with its full form, use the abbreviation and then in parentheses use the full form, e.g., CEO (Chief Executive Officer) or EAP (Employee Assistance Program).\n\n   3.2 **Must Answer** (for H2 sections, without mentioning these questions in the article or as headings; use as a writing guide):\n      - What is it?\n      - Why does it matter?\n      - How to implement?\n\n   3.3 **Stylistic Must-Haves**:\n      - Contractions (\"don’t\", \"you’ll\").\n      - Standalone parentheses (\"(According to Semrush)\").\n      - List of transitions (e.g., How about an example?, For instance, to illustrate, consider this, a case in point is..., let’s take a look at..., as an illustration, specifically, in other words, put differently, to clarify, what this means is..., simply put, the reason for this is..., let me elaborate:, furthermore, moreover, in addition, beyond that, on top of that, similarly, likewise, however, on the other hand, in contrast, conversely, despite this, nevertheless, alternatively, therefore, as a result, consequently, thus, because of this, for this reason, first, second, third..., next, then, after that, subsequently, meanwhile, finally, in summary, to conclude, in short, overall, therefore, as we’ve seen...) OR Lead-ins (e.g., I’ll explain, Consider the following:, for a clearer picture:, to see this in action:, a perfect illustration of this is:, let’s consider an instance where..., take, for example:, let me break it down for you:, to put it simply:, here’s what I mean:, the key here is:, allow me to clarify:, this can be understood as follows:, it’s also worth noting that:, another important point is:, in addition to this:, we should also consider:, building on this idea:, it’s important to remember, however:, on the flip side:, that being said:, despite this fact:, a different perspective shows:, in conclusion:, to summarize briefly:, the main takeaway here is:, ultimately:, to wrap things up:, note that:, observe that:, keep in mind that:, it’s interesting to see that:, let’s focus on:).\n\n   3.4 **Formatting**:\n      - Modern WordPress Block Editor format with Gutenberg blocks.\n      - **H2s** for main sections. (If ID is heading-1,heading-2)\n      - **H3s** for subsections. (If ID is heading-2-1,heading-2-2,heading-3-1,)\n      - **Bold** key phrases (\"Topically Relevant\").\n      - Bullet points for lists.\n\n   3.5 **wordCount**: 3000-4000 words\n\n   3.6 **Avoid**:\n      - Passive voice (\"It should be noted\").\n      - Jargon without explanation.\n      - Generic advice (\"Write good content\").\n      - Third-person corporate tone.\n      - **Must NOT** include \"—\".\n\n   3.7 **Reference Words to Use**:\n      - \"Back in the day...\"\n      - \"Here’s the catch...\"\n      - \"Bottom line?\"\n      - \"How about an example?\"\n      - \"[Number]% WRONG\".\n\n   3.8 **Visual Placeholders**:\n      - \"See this screenshot of...\"\n      - \"Notice how [example]...\".\n\n  3.9 **Guidelines**\n      - This heading is part of a larger article, so don’t include an introduction or conclusion. It should merge seamlessly with the rest of the article.\n\n##[**[Output Requirement]**: Return **only** Return a structured output preserving hierarchy and tag types for further content formatting or analysis.\n\nHeadings: <h1> to <h6>\nParagraphs: <p>\nLine Breaks: <br>\nLists: <ul>, <ol>, <li>\nText Emphasis: <strong>, <em>\nLinks: <a>\nImages: <img>\nDividers: <hr>\n\n##Exclude any introductory text, concluding notes, word count, or explanations.",
          "options": {
            "systemMessage": ""
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 1.9,
        "position": [
          -2920,
          3185
        ],
        "id": "a6cdf842-1378-4453-a91d-b20f60988aa7",
        "name": "AIContenteWriter1",
        "retryOnFail": true
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          -3360,
          3260
        ],
        "id": "fdfc21d4-cc2d-459f-bdab-d41d61021a2f",
        "name": "Loop Over Items2"
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "destinationFieldName": "myarticle",
          "options": {
            "includeBinaries": false
          }
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          -3140,
          2885
        ],
        "id": "b6d66600-0aea-43e1-9c4f-bd3a84218329",
        "name": "Aggregate1"
      },
      {
        "parameters": {
          "jsCode": "// Get the outline from the first input item\nconst outline = $input.first().json.outline;\n\n// Check if outline exists\nif (!outline) {\n  return [{ json: { error: \"No outline data found\" } }];\n}\n\n// Log the raw outline for debugging\nconsole.log(\"Raw outline:\", outline);\n\ntry {\n  // If outline is not a string, convert it to a string or handle directly\n  let parsedOutline;\n  if (typeof outline === \"string\") {\n    // Remove any leading/trailing invalid characters like parentheses\n    const cleanedOutline = outline.replace(/^\\(|\\)$/g, \"\").trim();\n    parsedOutline = JSON.parse(cleanedOutline);\n  } else {\n    // If outline is already an object or array, use it directly\n    parsedOutline = outline;\n  }\n\n  // Ensure parsedOutline is an array\n  const items = Array.isArray(parsedOutline) ? parsedOutline : [parsedOutline];\n\n  // Return an array of objects\n  return items.map(item => ({ json: item }));\n} catch (error) {\n  // Return error details for debugging\n  return [{ json: { error: `Failed to parse outline: ${error.message}`, rawOutline: outline } }];\n}"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -3800,
          3260
        ],
        "id": "4b06a614-3253-4161-abca-9342d7c67e8d",
        "name": "Code6"
      },
      {
        "parameters": {
          "jsCode": "// Complete debugging version\nconst batchItems = $input.all().slice(0, 2);\n\nconsole.log('=== COMPLETE DEBUG INFO ===');\nconsole.log('Total items:', batchItems.length);\n\n// Function to recursively find all arrays in an object\nfunction findAllArrays(obj, path = '') {\n  const arrays = [];\n  \n  if (Array.isArray(obj)) {\n    arrays.push({ path, data: obj, length: obj.length });\n  } else if (obj && typeof obj === 'object') {\n    for (const [key, value] of Object.entries(obj)) {\n      arrays.push(...findAllArrays(value, path ? `${path}.${key}` : key));\n    }\n  }\n  \n  return arrays;\n}\n\n// Debug each item\nbatchItems.forEach((item, index) => {\n  console.log(`\\n--- ITEM ${index} ---`);\n  console.log('Full item structure:', JSON.stringify(item, null, 2));\n  \n  // Find all arrays in the item\n  const allArrays = findAllArrays(item.json);\n  console.log('All arrays found:', allArrays);\n  \n  // Check specific paths\n  console.log('Checking specific paths:');\n  console.log('- item.json.content:', !!item.json.content);\n  console.log('- item.json.content?.chapters:', !!item.json.content?.chapters);\n  console.log('- item.json.chapters:', !!item.json.chapters);\n  console.log('- item.json.headings:', !!item.json.headings);\n  \n  // Try to access the data you see in the UI\n  if (item.json.content) {\n    console.log('Content keys:', Object.keys(item.json.content));\n    if (item.json.content.chapters) {\n      console.log('Chapters type:', typeof item.json.content.chapters);\n      console.log('Chapters keys/length:', Array.isArray(item.json.content.chapters) ? \n        item.json.content.chapters.length : \n        Object.keys(item.json.content.chapters));\n    }\n  }\n});\n\n// Try different extraction methods\nlet extractedData = null;\nconst firstItem = batchItems[0]?.json;\n\nif (firstItem) {\n  console.log('\\n=== EXTRACTION ATTEMPTS ===');\n  \n  // Method 1: Direct access to what you see in UI\n  if (firstItem.content?.chapters) {\n    console.log('Method 1: Found content.chapters');\n    extractedData = firstItem.content.chapters;\n  }\n  \n  // Method 2: Root level chapters\n  else if (firstItem.chapters) {\n    console.log('Method 2: Found root chapters');\n    extractedData = firstItem.chapters;\n  }\n  \n  // Method 3: Look for any array with \"headings\" or \"title\"\n  else {\n    const allArrays = findAllArrays(firstItem);\n    const potentialChapters = allArrays.find(arr => \n      arr.data.some(item => item.title || item.headingTag || item.heading)\n    );\n    \n    if (potentialChapters) {\n      console.log('Method 3: Found potential chapters at:', potentialChapters.path);\n      extractedData = potentialChapters.data;\n    }\n  }\n}\n\nconsole.log('\\n=== FINAL RESULT ===');\nconsole.log('Extracted data:', extractedData);\nconsole.log('Extracted data type:', typeof extractedData);\nconsole.log('Is array:', Array.isArray(extractedData));\n\n// Create output with all debug info\nconst output = {\n  debugInfo: {\n    totalItems: batchItems.length,\n    firstItemKeys: firstItem ? Object.keys(firstItem) : [],\n    extractedDataType: typeof extractedData,\n    extractedDataLength: Array.isArray(extractedData) ? extractedData.length : 'Not an array'\n  },\n  extractedData: extractedData,\n  chaptersString: extractedData ? JSON.stringify({\n    title: Array.isArray(extractedData) ? extractedData[0]?.title ?? 'Untitled' : 'No data',\n    headings: Array.isArray(extractedData) ? extractedData : []\n  }) : 'No data extracted'\n};\n\nreturn [{ json: output }];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -3140,
          3185
        ],
        "id": "4cbe74a0-6f51-4091-b2ce-8cb1c94eead6",
        "name": "Code7"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=You are a professional content writer. Generate content based on the provided parameters and return it in the EXACT JSON format specified below.\n\n**CONTENT PARAMETERS:**\n- Introduction Hook: {{ $json.introductionHook }}\n- Conclusion Hook: {{ $json.conclusionHook }}\n- FAQs: {{ $json.FAQs }}\n- Main Keyword: {{ $json.mainKeyword }}\n- Related Keywords: {{ $json.relatedKeywords }}\n- Semantic Keywords: {{ $json.semanticKeywords1 }}\n- Tone of Voice: {{ $json.toneOfVoice }}\n- Point of View: {{ $json.pointOfView }}\n- Text Readability: {{ $json.textReadability }}\n- Details to Include: {{ $json.detailsToInclude }}\n\n**INSTRUCTIONS:**\n1. Write an engaging introduction using the introduction hook provided\n2. Create comprehensive FAQ content based on the FAQs prompt\n3. Write a compelling conclusion using the conclusion hook provided\n4. Use the specified tone of voice, point of view, and readability level\n5. Naturally incorporate the main keyword, related keywords, and semantic keywords\n6. Include all specified details\n\n**OUTPUT FORMAT:**\nYou MUST return your response in this EXACT JSON structure. Do not add any text before or after the JSON:\n\n{\n  \"sections\": {\n    \"introduction\": [\n      {\n        \"id\": \"mainIntroduction\",\n        \"content\": [\"Your introduction content here as an array of paragraphs\"]\n      }\n    ],\n    \"faqs\": [\n      {\n        \"id\": \"faqs\",\n        \"headingTag\": \"h2\",\n        \"title\": \"FAQs\",\n        \"content\": [\"Your FAQ content here as an array of question-answer pairs\"]\n      }\n    ],\n    \"conclusion\": [\n      {\n        \"id\": \"mainConclusion\",\n        \"content\": [\"Your conclusion content here as an array of paragraphs\"]\n      }\n    ]\n  }\n}\n\n**CRITICAL:** \n- Return ONLY the JSON object\n- No additional text, explanations, or markdown formatting\n- Ensure valid JSON syntax with proper quotes and commas\n- Each content array should contain strings representing paragraphs or sections",
          "hasOutputParser": true
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.6,
        "position": [
          -2920,
          2485
        ],
        "id": "a53795da-6f0e-491f-b917-5f7e23ccf701",
        "name": "Introduction1"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3.1,
        "position": [
          -2246,
          2860
        ],
        "id": "e007f0df-c46e-4ad0-9608-d928c73f0120",
        "name": "joinArticle1"
      },
      {
        "parameters": {
          "jsCode": "try {\n  // Combine content without additional separators (fields already have <!-- wp:separator -->)\n  const post_content_combined = [\n    $input.first().json.introduction,\n    $input.first().json.main_content,\n    $input.first().json.faqs,\n    $input.first().json.conclusion\n  ]\n    .filter(section => section && section.trim() !== '') // Handle undefined/null and empty sections\n    .join('\\n\\n');\n\n  return [{\n    json: {\n      post_title: $input.first().json.main_title || '', // Allow title to be undefined or empty\n      post_content: post_content_combined\n    }\n  }];\n} catch (error) {\n  return [{\n    json: {\n      error: `Error processing content: ${error.message}`\n    }\n  }];\n}"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -1728,
          2860
        ],
        "id": "522e078c-bedf-41af-a02f-6ba34f2befb5",
        "name": "joinArticle_code1"
      },
      {
        "parameters": {
          "jsCode": "const items = $input.all().map(item => item.json);\nconst blocks = [...new Set(\n  items\n    .flatMap(item => Array.isArray(item.myarticle) \n      ? item.myarticle.map(obj => obj.output || '') \n      : [item.myarticle || ''])\n)]\n  .join('')\n  .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n  .replace(/\\* \\*(.*?)\\* \\*/g, '<strong>$1</strong>');\n\nreturn [{\n  json: {\n    post_title: $('Split Out1').first().json.title,\n    post_content: blocks\n  }\n}];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2842,
          2885
        ],
        "id": "62d142ec-2fc8-4d6b-96fa-e3ebe8354707",
        "name": "coreContent_code3"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "daa5d45a-bfff-474f-bb80-ea96dd031741",
                "name": "main_content",
                "value": "={{ $json.post_content }}",
                "type": "string"
              },
              {
                "id": "c84a349e-8f7f-4d17-91b3-9c16ef07656d",
                "name": "main_title",
                "value": "={{ $('If3').first().json.mainTitle }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -2544,
          2885
        ],
        "id": "1a1ff33b-5e08-44c2-8aef-2e745e8b5cc7",
        "name": "rename_mainContent1"
      },
      {
        "parameters": {
          "jsCode": "const items = $input.all().map(item => item.json);\n\n// Merge all items into a single flat object\nconst merged = items.reduce((acc, item) => {\n  // If item has post_sections, merge its nested content first\n  if (item.post_sections) {\n    acc = { ...acc, ...item.post_sections };\n  }\n  // Then merge any other top-level keys like main_content\n  acc = { ...acc, ...item };\n  return acc;\n}, {});\n\n// Define the desired field order\nconst fieldOrder = ['main_title','introduction', 'main_content', 'conclusion', 'faqs'];\n\n// Create a new object with fields in the specified order\nconst orderedJson = fieldOrder.reduce((acc, key) => {\n  if (key in merged) {\n    acc[key] = merged[key];\n  }\n  return acc;\n}, {});\n\nreturn [{\n  json: orderedJson\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -1948,
          2860
        ],
        "id": "4d4f0a69-913f-4c23-87de-e154977ba7a4",
        "name": "Code8"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          -4240,
          2885
        ],
        "id": "90f84612-9d86-4bdf-9d04-ee492590a465",
        "name": "Loop Over Items3"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -4020,
          2785
        ],
        "id": "6d4f3369-55cc-4c79-b7f5-06e95599e8ba",
        "name": "No Operation, do nothing9"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -4460,
          2685
        ],
        "id": "03166db1-8ddc-420f-91b5-32f187e3c41c",
        "name": "No Operation, do nothing10"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "1eb8d4f5-2ec0-4987-9096-f6cfc6c10b11",
                "leftValue": "={{ $json.outlineApproved }}",
                "rightValue": "Approved",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -4680,
          2885
        ],
        "id": "a7f2c89c-6db3-41ae-a869-740dad19fbbf",
        "name": "If_Approved1"
      },
      {
        "parameters": {
          "jsCode": "for (const item of $input.all()) {\n  let content = item.json.post_content || '';\n\n  // Clean up as before\n  content = content.replace(/<!--\\s*\\/wp:group\\s*-->/g, '');\n  content = content.replace(/<!--\\s*wp:post-content\\s*-->/g, '');\n  content = content.replace(/<p>\\s*<!--\\s*wp:[a-z-]+\\s*(?:{[^{}]*})?\\s*-->\\s*<\\/p>/g, '');\n  content = content.replace(/<p>\\s*<!--\\s*\\/wp:[a-z-]+\\s*-->\\s*<\\/p>/g, '');\n  content = content.replace(/<p>\\s*<\\/p>/g, '');\n\n  // Convert <p> to Paragraph blocks\n  content = content.replace(/(<p>.*?<\\/p>)/g, '<!-- wp:paragraph -->$1<!-- /wp:paragraph -->');\n\n  // Convert <ul> to List blocks\n  content = content.replace(/(<ul>.*?<\\/ul>)/gs, '<!-- wp:list -->$1<!-- /wp:list -->');\n\n  // Convert <h2> to Heading blocks\n  content = content.replace(/(<h2(?:\\s+[^>]*)?>.*?<\\/h2>)/g, '<!-- wp:heading {\"level\":2} -->$1<!-- /wp:heading -->');\n\n  content = content.trim();\n  item.json.post_content = content;\n\n  return $input.all();\n}"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -1508,
          2860
        ],
        "id": "98430c1b-c511-4c73-bee7-b4c60e99422a",
        "name": "Code9"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.limit",
        "typeVersion": 1,
        "position": [
          -4460,
          2885
        ],
        "id": "f8a6b68e-1e5f-4e91-8d6c-d38044bd6dc5",
        "name": "Limit1"
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "gpt-4.1-nano",
            "mode": "list",
            "cachedResultName": "gpt-4.1-nano"
          },
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1.2,
        "position": [
          -2892,
          2705
        ],
        "id": "86985633-2d17-46de-8c6d-856897c592ad",
        "name": "OpenAI Chat Model",
        "credentials": {
          "openAiApi": {
            "id": "JzL8V7JW3E5uZM23",
            "name": "OpenAi account 3"
          }
        }
      },
      {
        "parameters": {
          "jsonSchemaExample": "{\n  \"sections\": {\n    \"introduction\": [\n      {\n        \"id\": \"mainIntroduction\",\n        \"content\": []\n      }\n    ],\n    \"faqs\": [\n      {\n        \"id\": \"faqs\",\n        \"headingTag\": \"h2\",\n        \"title\": \"FAQs\",\n        \"content\": []\n      }\n    ],\n    \"conclusion\": [\n      {\n        \"id\": \"mainConclusion\",\n        \"content\": []\n      }\n    ]\n  }\n}"
        },
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "typeVersion": 1.2,
        "position": [
          -2772,
          2705
        ],
        "id": "dcc9a378-b6f3-4ca1-85fa-37f9c94c9f1f",
        "name": "Structured Output Parser"
      },
      {
        "parameters": {
          "language": "python",
          "pythonCode": "# N8n Python Code Node Script\n# Extract JSON from all input items\nitems = [item['json'] for item in _input.all()]\n\n# Debug: Print the structure to understand the data\nprint(\"Debug - Full item structure:\")\nfor i, item in enumerate(items):\n    print(f\"Item {i}: {item}\")\n\n# Extract and structure each section\nsections = []\n\nfor item in items:\n    # Try different possible paths for sections\n    sec = item.get('sections', {})  # Direct sections\n    if not sec:\n        sec = item.get('output', {}).get('sections', {})  # Nested in output\n    \n    print(f\"Debug - Sections found: {sec}\")\n    \n    # Extract introduction content\n    introduction = []\n    intro_blocks = sec.get('introduction', [])\n    print(f\"Debug - Introduction blocks: {intro_blocks}\")\n    for block in intro_blocks:\n        if isinstance(block, dict) and 'content' in block:\n            if isinstance(block['content'], list):\n                introduction.extend(block['content'])\n            else:\n                introduction.append(str(block['content']))\n    \n    # Extract and format FAQs with their heading tags\n    faqs = []\n    faq_blocks = sec.get('faqs', [])\n    print(f\"Debug - FAQ blocks: {faq_blocks}\")\n    for faq in faq_blocks:\n        if isinstance(faq, dict):\n            heading_tag = faq.get('headingTag', 'h2')\n            title = faq.get('title', 'FAQs')\n            content = faq.get('content', [])\n            \n            print(f\"Debug - FAQ content type: {type(content)}, value: {content}\")\n            \n            title_html = f\"<{heading_tag}>{title}</{heading_tag}>\"\n            \n            # Handle different content formats\n            if isinstance(content, list):\n                body = ''.join(f\"<p>{str(p)}</p>\" for p in content if p)\n            else:\n                body = f\"<p>{str(content)}</p>\"\n            \n            faqs.append(f\"{title_html}{body}\")\n    \n    # Extract conclusion content\n    conclusion = []\n    conclusion_blocks = sec.get('conclusion', [])\n    print(f\"Debug - Conclusion blocks: {conclusion_blocks}\")\n    for block in conclusion_blocks:\n        if isinstance(block, dict) and 'content' in block:\n            if isinstance(block['content'], list):\n                conclusion.extend(block['content'])\n            else:\n                conclusion.append(str(block['content']))\n    \n    # Structure the section\n    sections.append({\n        'introduction': '\\n'.join(str(x) for x in introduction),\n        'faqs': '\\n'.join(faqs),\n        'conclusion': '\\n'.join(str(x) for x in conclusion)\n    })\n\n# Assume only one article for simplicity (adjust if you support multiples)\noutput_sections = sections[0] if sections else {\n    'introduction': '',\n    'faqs': '',\n    'conclusion': ''\n}\n\n# Return data for N8n\nreturn [{\n    'json': {\n        'post_sections': {\n            'introduction': output_sections['introduction'],\n            'faqs': output_sections['faqs'],\n            'conclusion': output_sections['conclusion']\n        }\n    }\n}]"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2544,
          2585
        ],
        "id": "2b6c298d-367b-46bd-a506-1e13a261213e",
        "name": "coreContent_code4"
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "gpt-4.1-nano",
            "mode": "list",
            "cachedResultName": "gpt-4.1-nano"
          },
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1.2,
        "position": [
          -2832,
          3405
        ],
        "id": "1b154a40-cf9d-45a1-af42-6d340c9ac295",
        "name": "OpenAI Chat Model1",
        "credentials": {
          "openAiApi": {
            "id": "JzL8V7JW3E5uZM23",
            "name": "OpenAi account 3"
          }
        }
      },
      {
        "parameters": {
          "url": "https://pixabay.com/api",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "key",
                "value": "50898167-59c5988c844acc0cb999c6b22"
              },
              {
                "name": "q",
                "value": "={{ $json.main_keyword }}"
              }
            ]
          },
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {}
            ]
          },
          "options": {
            "redirect": {
              "redirect": {}
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -1508,
          3185
        ],
        "id": "01eec7b9-191a-4f01-b44a-fb9e278a1031",
        "name": "Stock Image URL",
        "retryOnFail": false,
        "alwaysOutputData": false,
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://www.catlovesbest.com/wp-json/wp/v2/media",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "wordpressApi",
          "sendBody": true,
          "contentType": "multipart-form-data",
          "bodyParameters": {
            "parameters": [
              {
                "name": "title",
                "value": "={{ $('Code').item.json.image_name }}"
              },
              {
                "name": "alt_text",
                "value": "={{ $('Code').item.json.alt_text }}"
              },
              {
                "parameterType": "formBinaryData",
                "name": "file",
                "inputDataFieldName": "data"
              }
            ]
          },
          "options": {
            "redirect": {
              "redirect": {}
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -848,
          3185
        ],
        "id": "1b7ff65a-75cf-4323-95aa-3926a45aee04",
        "name": "HTTP Request",
        "credentials": {
          "wordpressApi": {
            "id": "cPZl3LSGHW6sIe7Z",
            "name": "Wordpress account"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "jsCode": "// Get the content string from the input\nconst content = $input.first().json.choices[0].message.content;\n\nlet parsed;\ntry {\n  parsed = JSON.parse(content);\n} catch (error) {\n  throw new Error(\"Invalid JSON in content: \" + error.message);\n}\n\n// Return parsed JSON so it can be used in the next node\nreturn [\n  {\n    json: parsed\n  }\n];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -1728,
          3185
        ],
        "id": "5c00e39b-7545-4dca-9da4-fdd54dba626a",
        "name": "Code"
      },
      {
        "parameters": {
          "jsCode": "/*\nconst html =$('AIContenteWriter1').first().json.output ;\nconst imageUrl = $input.first().json.guid.rendered;\nconst altText = $input.first().json.alt_text || '';\n\n// Create the <img> tag\nconst imgTag = `<img src=\"${imageUrl}\" alt=\"${altText}\" style=\"max-width:100%;height:auto;\" />` + `\\n`;\n\n// Regex to find the first closing </h2> tag and insert image right after\nconst modifiedHtml = html.replace(/<\\/h2>/i, '</h2>\\n' + imgTag);\n\nreturn [\n  {\n    json: {\n      output: modifiedHtml\n    }\n  }\n];\n\n*/\n\nconst html = $('AIContenteWriter1').first().json.output;\n\n// Safe access for image URL\nconst imageGuid = $input.first().json.guid;\nconst imageUrl = imageGuid?.rendered ?? '';\n\n// Safe access for alt text\nconst altText = $input.first().json.alt_text ?? '';\n\n// Only create <img> tag if imageUrl exists\nconst imgTag = imageUrl\n  ? `<img src=\"${imageUrl}\" alt=\"${altText}\" style=\"max-width:100%;height:auto;\" />\\n`\n  : '';\n\n// Inject image tag after first </h2> (if present)\nconst modifiedHtml = html.replace(/<\\/h2>/i, '</h2>\\n' + imgTag);\n\nreturn [\n  {\n    json: {\n      output: modifiedHtml\n    }\n  }\n];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -628,
          3185
        ],
        "id": "87d1d888-2fa8-426b-ab93-d18256574dd2",
        "name": "Code:Image tag insertion"
      },
      {
        "parameters": {
          "amount": 1
        },
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          -408,
          3410
        ],
        "id": "b03fa800-3315-4967-8042-23b2141da0e5",
        "name": "Wait5",
        "webhookId": "86f0779b-92e6-470f-9d20-1468ba621f08"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://localhost:3001/featured-image/create",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "imageUrl",
                "value": "={{ $json.hits[0].largeImageURL }}"
              },
              {
                "name": "articleTitle",
                "value": "={{ $('Code1').item.json.H2 }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -1288,
          3185
        ],
        "id": "73983706-0f82-436c-b9f5-8328bc18a349",
        "name": "template image generator",
        "retryOnFail": true,
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "jsCode": "const html = $input.first().json.output;\n\n// Match the first <h2> and capture everything until the next <h2>, <h3>, etc., or end of string\nconst match = html.match(/<h2[^>]*>(.*?)<\\/h2>/i);\n\nreturn [\n  {\n    json: {\n      H2: match ? match[1].trim() : '',\n    },\n  },\n];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2544,
          3185
        ],
        "id": "5d72a8aa-5aaf-4daa-b4c6-6d0b16104234",
        "name": "Code1"
      },
      {
        "parameters": {
          "jsCode": "/*\n  // Clone the incoming item completely\nconst item = {\n  json: { ...items[0].json },\n  binary: {\n    data: {\n      ...items[0].binary?.data,\n      fileName: $('Code').first().json.image_name || 'default-name.webp',\n    },\n  },\n};\n\nreturn [item];\n*/\n\n// Clone the incoming item completely\nconst item = {\n  json: { ...items[0].json },\n  binary: {}\n};\n\n// Only add binary data if it exists in the source item\nif (items[0].binary && items[0].binary.data) {\n  item.binary.data = {\n    ...items[0].binary.data,\n    fileName: $('Code').first().json.image_name || 'default-name.webp',\n  };\n} else {\n  // If no binary data exists, create a minimal structure\n  // You might need to adjust this based on your specific requirements\n  item.binary.data = {\n    fileName: $('Code').first().json.image_name || 'default-name.webp',\n  };\n}\n\nreturn [item];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -1068,
          3185
        ],
        "id": "ee0dc579-bbfd-42bd-ad65-ad3dac8a51e7",
        "name": "Code2"
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "event": "rowUpdate",
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheetsTrigger",
        "typeVersion": 1,
        "position": [
          -4900,
          1425
        ],
        "id": "31b17d04-1bdd-4f06-8315-70d97948cb9c",
        "name": "Google Sheets Trigger2",
        "credentials": {
          "googleSheetsTriggerOAuth2Api": {
            "id": "9GNyGJsDRYdj8wOd",
            "name": "Google Sheets Trigger account"
          }
        }
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -4240,
          1525
        ],
        "id": "8bda3db2-3c6f-4a3d-bcb2-b368ffbe9ae7",
        "name": "No Operation, do nothing6"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "loose",
              "version": 2
            },
            "conditions": [
              {
                "id": "6cff2456-0c36-4b0b-bfe3-1fc1bf85873b",
                "leftValue": "={{ $('Google Sheets Trigger2').item.json.articleWordCount }}",
                "rightValue": 3600,
                "operator": {
                  "type": "number",
                  "operation": "gt"
                }
              }
            ],
            "combinator": "and"
          },
          "looseTypeValidation": true,
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -4240,
          1300
        ],
        "id": "161e10a1-7a04-4191-b3fc-4880a921d93e",
        "name": "wordCount(<>3600)"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=Extract 150 keywords from the provided text.\n\n- Include:\n  - The **top 50 one-word keywords** (most frequent)\n  - The **top 50 two-word keywords** (most frequent)\n  - The **top 50 three-word keywords** (most frequent)\n\n- Format:\n  - Return a **single comma-separated string**\n  - Do **not** include counts, quotes, bullet points, or any explanation\n  - Only the keywords, separated by commas\n  - Ensure the total is exactly **150 keywords**\n\nText: {{ $json.competitorArticles }}{{ $json.outline }}\n",
          "messages": {
            "messageValues": [
              {
                "message": "You are an expert keyword research assistant specializing in Semantic SEO. Don't count stop words or similar words. Only focus on SEO important words. Output the keywords as a comma-separated list. Remove keywords that are not related to main theme of the text in semantic context. provide minimum 150 keywords. "
              }
            ]
          }
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.6,
        "position": [
          -1792,
          350
        ],
        "id": "c12197da-24b4-4bfe-aae7-5417fc7430cb",
        "name": "competitorKeywords",
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "competitorKeywords": "={{$json.text}} ",
              "ID": "={{ $('Execute>3600').first().json.ID }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent1",
                "displayName": "competitorContent1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent2",
                "displayName": "competitorContent2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "index",
                "displayName": "index",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "logprobs",
                "displayName": "logprobs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "finish_reason",
                "displayName": "finish_reason",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -1416,
          350
        ],
        "id": "f18a156f-a108-447a-9d0d-24f33d5498ac",
        "name": "Competitor Google Sheets1",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "semanticKeywords1": "={{ $json.semanticKeywordsMain }} ",
              "ID": "={{ $('Execute>3600').item.json.ID }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent1",
                "displayName": "competitorContent1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent2",
                "displayName": "competitorContent2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "index",
                "displayName": "index",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "logprobs",
                "displayName": "logprobs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "finish_reason",
                "displayName": "finish_reason",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -1416,
          825
        ],
        "id": "c6111e83-48bc-4719-8995-6e05ee9c006a",
        "name": "semanticKeywords1 Google Sheets1",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "semanticKeywords2": "={{ $json.semanticKeywordsRelated }}",
              "ID": "={{ $('Execute>3600').item.json.ID }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent1",
                "displayName": "competitorContent1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent2",
                "displayName": "competitorContent2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "index",
                "displayName": "index",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "logprobs",
                "displayName": "logprobs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "finish_reason",
                "displayName": "finish_reason",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -1196,
          1125
        ],
        "id": "62c8d3b0-a5d8-4dba-a10d-88fd195d9417",
        "name": "semanticKeywords2 Google Sheets1",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "mode": "combine",
          "fieldsToMatchString": "ID",
          "options": {}
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3.1,
        "position": [
          -1196,
          525
        ],
        "id": "fc7c39af-2d2c-4860-854c-c8f19525aceb",
        "name": "Merge4"
      },
      {
        "parameters": {
          "mode": "combine",
          "fieldsToMatchString": "ID",
          "options": {}
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3.1,
        "position": [
          -976,
          675
        ],
        "id": "d5067067-41cf-4d48-b3f8-02dea0d885ca",
        "name": "Merge5"
      },
      {
        "parameters": {
          "modelId": {
            "__rl": true,
            "value": "gpt-4.1-nano",
            "mode": "list",
            "cachedResultName": "GPT-4.1-NANO"
          },
          "messages": {
            "values": [
              {
                "content": "=**Prompt\n{{ $('Execute>3600').first().json.outlinePrompt }}\n\n** Main keywords: {{ $('Execute>3600').first().json.mainKeyword }}\n** Related KWs: {{ $('Execute>3600').first().json.relatedKeywords }}\n\n** List of Semantic Keywords:\n{{ $json.semanticKeywords1 }}, {{ $json.semanticKeywords2 }}\n** List of Keywords used by competitors:\n{{ $json.competitorKeywords }}\n\n**Heading and Wordcount: minimum {{ $('Execute>3600').first().json.articleSize }}\n"
              }
            ]
          },
          "jsonOutput": true,
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.openAi",
        "typeVersion": 1.8,
        "position": [
          -756,
          675
        ],
        "id": "7f2d3c48-8d83-482c-86d6-3b81f581709f",
        "name": "Outline Generation1",
        "credentials": {
          "openAiApi": {
            "id": "JzL8V7JW3E5uZM23",
            "name": "OpenAi account 3"
          }
        }
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          -2466,
          825
        ],
        "id": "4c5a4b24-a38d-4a81-91ae-dbdea94ac56a",
        "name": "Wait3",
        "webhookId": "ca81fa82-604c-4cdf-ba4d-e8adae2eecce"
      },
      {
        "parameters": {
          "amount": 2
        },
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          -2090,
          1125
        ],
        "id": "77380283-fefe-46b3-b7c3-6fbf648916df",
        "name": "Wait4",
        "webhookId": "d2499411-f2f6-41d7-ba13-1eff3a2f4655"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -3800,
          450
        ],
        "id": "6c19a509-8ecc-495b-81a0-e807749bafaa",
        "name": "No Operation, do nothing7"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          -4020,
          650
        ],
        "id": "36cc2606-1bc7-46bc-811f-c6edfc71deba",
        "name": "Loop_Till_All_Content1"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "bf27639c-5540-4220-a94a-895cc4b22a7b",
                "leftValue": "={{ $json.Execute }}",
                "rightValue": "=Yes",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -4460,
          1350
        ],
        "id": "98fd9f61-87ae-4c45-8e9f-93bd9dc801cc",
        "name": "1stExecute(Yes/No)"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "aa5d67ca-9fa1-490d-822a-9b13dcbf6dfc",
                "leftValue": "={{ $json.Execute }}",
                "rightValue": "Yes",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -3800,
          650
        ],
        "id": "51c75a9b-a7fe-4eb5-836b-da38d0d5ffbc",
        "name": "Execute>3600"
      },
      {
        "parameters": {
          "url": "https://api.scraperapi.com",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "api_key",
                "value": "b5fa77b6e7e006bbfbf3e3733aa95e2d"
              },
              {
                "name": "url",
                "value": "={{ $json.competitorURL2 }}"
              }
            ]
          },
          "options": {
            "response": {
              "response": {
                "responseFormat": "text"
              }
            }
          }
        },
        "name": "competitorURL2-Content1",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 3,
        "position": [
          -2984,
          600
        ],
        "id": "4a93e4bd-01de-4a00-b2c5-87912a92fbcb"
      },
      {
        "parameters": {
          "url": "https://api.scraperapi.com",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "api_key",
                "value": "b5fa77b6e7e006bbfbf3e3733aa95e2d"
              },
              {
                "name": "url",
                "value": "={{ $json.competitorURL1 }}"
              }
            ]
          },
          "options": {
            "response": {
              "response": {
                "responseFormat": "text"
              }
            }
          }
        },
        "name": "competitorURL1-Content1",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 3,
        "position": [
          -2984,
          0
        ],
        "id": "40c0c2f5-f418-46ea-831b-7f60713fff74"
      },
      {
        "parameters": {
          "mode": "runOnceForEachItem",
          "jsCode": "const data = $json.data\n\n// Function to extract text from HTML while removing unnecessary spaces\nfunction extractTextFromHTML(html) {\n  // Remove script, style, and other non-visible tags\n  const cleanedHTML = html\n    .replace(/<script[\\s\\S]*?>[\\s\\S]*?<\\/script>/gi, '') // Remove script tags\n    .replace(/<style[\\s\\S]*?>[\\s\\S]*?<\\/style>/gi, '')   // Remove style tags\n    .replace(/<[^>]+>/g, '')                            // Remove all other HTML tags\n    .replace(/\\s+/g, ' ')                               // Replace multiple spaces with a single space\n    .trim();                                            // Trim leading and trailing spaces\n  return cleanedHTML;\n}\n\n// Extract text from the input HTML\nconst extractedText = extractTextFromHTML(data);\n\n// Log or return the extracted text for debugging\nconsole.log(extractedText);\n\n// Return the extracted text as output\nreturn { competitorContent1: extractedText };"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2764,
          0
        ],
        "id": "4cc94bc8-2504-4d82-be03-f7da737328df",
        "name": "competitorURL1-HTML"
      },
      {
        "parameters": {
          "mode": "runOnceForEachItem",
          "jsCode": "const data = $json.data;\n\n// Function to extract text from HTML while removing unnecessary spaces\nfunction extractTextFromHTML(html) {\n  // Remove script, style, and other non-visible tags\n  const cleanedHTML = html\n    .replace(/<script[\\s\\S]*?>[\\s\\S]*?<\\/script>/gi, '') // Remove script tags\n    .replace(/<style[\\s\\S]*?>[\\s\\S]*?<\\/style>/gi, '')   // Remove style tags\n    .replace(/<[^>]+>/g, '')                            // Remove all other HTML tags\n    .replace(/\\s+/g, ' ')                               // Replace multiple spaces with a single space\n    .trim();                                            // Trim leading and trailing spaces\n  return cleanedHTML;\n}\n\n// Extract text from the input HTML\nconst extractedText = extractTextFromHTML(data);\n\n// Log or return the extracted text for debugging\nconsole.log(extractedText);\n\n// Return the extracted text as output\nreturn { competitorContent2: extractedText };"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2764,
          600
        ],
        "id": "79cbef70-ba4b-48cb-b554-52e78494845f",
        "name": "competitorURL2-HTML",
        "executeOnce": true,
        "retryOnFail": false,
        "onError": "continueRegularOutput",
        "notes": "Skip this step"
      },
      {
        "parameters": {
          "mode": "combine",
          "combineBy": "combineAll",
          "options": {}
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3.1,
        "position": [
          -2466,
          350
        ],
        "id": "e953c011-e1ed-4772-abff-6b9bed120a34",
        "name": "MergeCompetitorURLs",
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.0-flash-lite",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          -1704,
          570
        ],
        "id": "71b909ae-d039-4e72-9a1f-d0a82996ac36",
        "name": "Google Gemini Chat Model4",
        "credentials": {
          "googlePalmApi": {
            "id": "BONDfk1Ws9tBdE0s",
            "name": "Google Gemini(PaLM) Api account"
          }
        }
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.5-flash",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          -2080,
          945
        ],
        "id": "6fe0d7e1-739e-40b5-9688-4b800801dd61",
        "name": "Google Gemini Chat Model5",
        "credentials": {
          "googlePalmApi": {
            "id": "BONDfk1Ws9tBdE0s",
            "name": "Google Gemini(PaLM) Api account"
          }
        }
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.5-flash",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          -1704,
          1345
        ],
        "id": "e195fc6f-bb25-4c8d-873a-5b96844281bc",
        "name": "Google Gemini Chat Model6",
        "credentials": {
          "googlePalmApi": {
            "id": "BONDfk1Ws9tBdE0s",
            "name": "Google Gemini(PaLM) Api account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c204fdce-c778-4fc3-97d8-e9d4bc6b9405",
                "name": "semanticKeywordsMain",
                "value": "={{ $json.text }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -1714,
          825
        ],
        "id": "af4eecd6-9f5d-41a2-b1a2-261d89330bfc",
        "name": "Edit Fields1"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c204fdce-c778-4fc3-97d8-e9d4bc6b9405",
                "name": "semanticKeywordsRelated",
                "value": "={{ $json.text }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -1416,
          1125
        ],
        "id": "7390508b-7885-4523-9862-d64c98093105",
        "name": "Edit Fields2"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={\n  \"contents\": [\n    {\n      \"role\": \"system\",\n      \"parts\": [\n        {\n          \"text\": \"You are an expert keyword research assistant specializing in Semantic SEO. Semantic SEO involves optimizing content for a broader understanding of topics and user intent, rather than just targeting specific keywords. This approach uses semantically related keywords, which are words and phrases conceptually connected to the main keyword or topic, to help search engines grasp the content's overall meaning and context. Your goal is to generate a list of highly relevant semantic keywords based on the user's input, keeping this definition in mind. Ensure the keywords are diverse, covering related terms, synonyms, and potential long-tail variations that reflect user intent and the broader topic. Output the keywords as a comma-separated list.\"\n        }\n      ]\n    },\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Based on the seed keyword: {{ $json.relatedKeywords }}, please generate 100 semantic keywords relevant for Semantic SEO. Ensure these keywords help search engines understand the broader topic and user intent related to the seed keyword.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"maxOutputTokens\": 1024, // Adjust as needed\n    \"temperature\": 0.7 // Adjust for desired randomness\n  }\n}"
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.6,
        "position": [
          -1792,
          1125
        ],
        "id": "4e0a3efe-18a2-4009-8ad3-f92b8182778d",
        "name": "semanticKeywordsRelated",
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=Based on the seed keyword:{{ $json.mainKeyword }}, please generate 200 semantic keywords relevant for Semantic SEO. Ensure these keywords help search engines understand the broader topic and user intent related to the seed keyword. ",
          "messages": {
            "messageValues": [
              {
                "message": "You are an expert keyword research assistant specializing in Semantic SEO. Semantic SEO involves optimizing content for a broader understanding of topics and user intent, rather than just targeting specific keywords. This approach uses semantically related keywords, which are words and phrases conceptually connected to the main keyword or topic, to help search engines grasp the content's overall meaning and context. Your goal is to generate a list of highly relevant semantic keywords based on the user's input, keeping this definition in mind. Ensure the keywords are diverse, covering related terms, synonyms, and potential long-tail variations that reflect user intent and the broader topic. Output the keywords as a comma-separated list."
              }
            ]
          }
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.6,
        "position": [
          -2168,
          725
        ],
        "id": "8d788449-14c6-4ed0-a617-81e50b2b3dd8",
        "name": "semanticKeywordsMain",
        "alwaysOutputData": true
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          -3800,
          1725
        ],
        "id": "6694873a-369c-4b6c-a76e-0a7a2e25090b",
        "name": "Wait8",
        "webhookId": "726cdc49-4547-480b-8c3b-74d281dd5c0a"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=Based on the seed keyword:{{ $json.mainKeyword }}, please generate 200 semantic keywords relevant for Semantic SEO. Ensure these keywords help search engines understand the broader topic and user intent related to the seed keyword. ",
          "messages": {
            "messageValues": [
              {
                "message": "You are an expert keyword research assistant specializing in Semantic SEO. Semantic SEO involves optimizing content for a broader understanding of topics and user intent, rather than just targeting specific keywords. This approach uses semantically related keywords, which are words and phrases conceptually connected to the main keyword or topic, to help search engines grasp the content's overall meaning and context. Your goal is to generate a list of highly relevant semantic keywords based on the user's input, keeping this definition in mind. Ensure the keywords are diverse, covering related terms, synonyms, and potential long-tail variations that reflect user intent and the broader topic. Output the keywords as a comma-separated list."
              }
            ]
          }
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.6,
        "position": [
          -3580,
          1625
        ],
        "id": "88bbfe43-9b9f-4fc8-922b-de38909c8fa7",
        "name": "semanticKeywordsMain1",
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.0-flash-lite",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          -3492,
          1845
        ],
        "id": "e98aaf2c-8edc-4541-a7ef-2a065f71bec1",
        "name": "Google Gemini Chat Model",
        "credentials": {
          "googlePalmApi": {
            "id": "BONDfk1Ws9tBdE0s",
            "name": "Google Gemini(PaLM) Api account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c204fdce-c778-4fc3-97d8-e9d4bc6b9405",
                "name": "semanticKeywordsMain",
                "value": "={{ $json.text }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -3204,
          1725
        ],
        "id": "fb7b5836-4985-4e5a-bfaa-64a2d2308337",
        "name": "Edit Fields"
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18oVOz_tfdmTyMzjlFIWWNK7D3wPkypxs2GGWUR85ls4/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "ID": "={{ $('Google Sheets Trigger2').item.json.ID }}",
              "semanticKeywords1": "={{ $json.semanticKeywordsMain }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent1",
                "displayName": "competitorContent1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "competitorContent2",
                "displayName": "competitorContent2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "index",
                "displayName": "index",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "logprobs",
                "displayName": "logprobs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "finish_reason",
                "displayName": "finish_reason",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -2984,
          1725
        ],
        "id": "7a89d642-673f-4291-bf30-4ad72e2e501e",
        "name": "semanticKeywords1 Google Sheets",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "amount": 2
        },
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          -3800,
          2125
        ],
        "id": "5b3ccd68-1ca5-49cf-9cba-78547e8660b7",
        "name": "Wait",
        "webhookId": "56a3acb9-fcb2-4e64-9a72-e5a609cc0055"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={\n  \"contents\": [\n    {\n      \"role\": \"system\",\n      \"parts\": [\n        {\n          \"text\": \"You are an expert keyword research assistant specializing in Semantic SEO. Semantic SEO involves optimizing content for a broader understanding of topics and user intent, rather than just targeting specific keywords. This approach uses semantically related keywords, which are words and phrases conceptually connected to the main keyword or topic, to help search engines grasp the content's overall meaning and context. Your goal is to generate a list of highly relevant semantic keywords based on the user's input, keeping this definition in mind. Ensure the keywords are diverse, covering related terms, synonyms, and potential long-tail variations that reflect user intent and the broader topic. Output the keywords as a comma-separated list.\"\n        }\n      ]\n    },\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Based on the seed keyword: {{ $json.relatedKeywords }}, please generate 100 semantic keywords relevant for Semantic SEO. Ensure these keywords help search engines understand the broader topic and user intent related to the seed keyword.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"maxOutputTokens\": 1024, // Adjust as needed\n    \"temperature\": 0.7 // Adjust for desired randomness\n  }\n}"
        },
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.6,
        "position": [
          -3580,
          2125
        ],
        "id": "9c37e7fd-d751-4585-8c64-4a3b36dc8e0a",
        "name": "semanticKeywordsRelated1",
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.0-flash-lite",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          -3492,
          2345
        ],
        "id": "3557cb96-b19f-4b17-b9ed-36cf7826a4ee",
        "name": "Google Gemini Chat Model1",
        "credentials": {
          "googlePalmApi": {
            "id": "BONDfk1Ws9tBdE0s",
            "name": "Google Gemini(PaLM) Api account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c204fdce-c778-4fc3-97d8-e9d4bc6b9405",
                "name": "semanticKeywordsRelated",
                "value": "={{ $json.text }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -3204,
          2125
        ],
        "id": "2b8fe6a3-f393-4211-ada3-2ca932c8f2df",
        "name": "Edit Fields3"
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18oVOz_tfdmTyMzjlFIWWNK7D3wPkypxs2GGWUR85ls4/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "ID": "={{ $('Google Sheets Trigger2').item.json.ID }}",
              "semanticKeywords2": "={{ $json.semanticKeywordsRelated }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -2984,
          2125
        ],
        "id": "246dfa20-a78e-4340-a73f-0db2c4228599",
        "name": "semanticKeywords2 Google Sheets",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "mode": "combine",
          "fieldsToMatchString": "ID",
          "options": {}
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3.1,
        "position": [
          -2764,
          1900
        ],
        "id": "4ccbae00-42d2-4417-80e6-80f8d4056613",
        "name": "Merge"
      },
      {
        "parameters": {
          "modelId": {
            "__rl": true,
            "value": "gpt-4.1-nano",
            "mode": "list",
            "cachedResultName": "GPT-4.1-NANO"
          },
          "messages": {
            "values": [
              {
                "content": "=**Prompt\n{{ $('Loop_Till_All_Content2').item.json.outlinePrompt }}\n\n** Main keywords: {{ $('Loop_Till_All_Content2').item.json.mainKeyword }}\n** Related KWs: {{ $('Loop_Till_All_Content2').item.json.relatedKeywords }}\n\n** List of Semantic Keywords:\n{{ $('Loop_Till_All_Content2').item.json.semanticKeywords1 }}, {{ $('Loop_Till_All_Content2').item.json.semanticKeywords2 }}\n\n**Heading and Wordcount: minimum {{ $('Loop_Till_All_Content2').item.json.articleSize }}\n"
              }
            ]
          },
          "jsonOutput": true,
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.openAi",
        "typeVersion": 1.8,
        "position": [
          -2544,
          1900
        ],
        "id": "4508485c-7831-4626-98f8-c580c55ac51c",
        "name": "Outline Generation",
        "credentials": {
          "openAiApi": {
            "id": "JzL8V7JW3E5uZM23",
            "name": "OpenAi account 3"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://157.245.21 0.116:3000/api/scrape",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "url",
                "value": "={{ $json.competitorURL1 }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -3502,
          100
        ],
        "id": "441685cf-0c2b-43dd-ba90-27aedfb01a40",
        "name": "HTTP Request1",
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://localhost:3000/api/scrape",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "url",
                "value": "={{ $json.competitorURL2 }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -3502,
          500
        ],
        "id": "f24a8bf8-d1cc-4b38-b429-0b1a6217830e",
        "name": "HTTP Request2"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "708c7fac-2f47-4429-8068-a6596f36c8e9",
                "leftValue": "={{ $json.success }}",
                "rightValue": true,
                "operator": {
                  "type": "boolean",
                  "operation": "equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -3204,
          100
        ],
        "id": "e7f1aa6c-ead3-47a7-9489-c56bd87d0c96",
        "name": "If"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "708c7fac-2f47-4429-8068-a6596f36c8e9",
                "leftValue": "={{ $json.success }}",
                "rightValue": true,
                "operator": {
                  "type": "boolean",
                  "operation": "equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -3204,
          500
        ],
        "id": "ea596530-6a31-4d56-8196-27006e7d07e8",
        "name": "If1"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          -4020,
          1925
        ],
        "id": "51e03026-54b4-4ac5-b328-17fdaecc8d77",
        "name": "Loop_Till_All_Content2"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          -3800,
          1525
        ],
        "id": "db5d651c-6b58-4e3d-a874-d9c351238b38",
        "name": "No Operation, do nothing"
      },
      {
        "parameters": {
          "jsCode": "// Get the input data (should be one item in this case)\nconst item =$input.first().json.content;\n\n// Create a new output with 'competitorContent1' field\nreturn [\n  {\n    json: {\n      competitorContent1: item.text\n    }\n  }\n];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2764,
          200
        ],
        "id": "dc2c3b5e-ed30-4830-bd91-f9b79713f57f",
        "name": "Code3"
      },
      {
        "parameters": {
          "jsCode": "// Get the input data (should be one item in this case)\nconst item =$input.first().json.content;\n\n// Create a new output with 'competitorContent1' field\nreturn [\n  {\n    json: {\n      competitorContent2: item.text\n    }\n  }\n];"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -2764,
          400
        ],
        "id": "40b24983-94b9-492a-9d68-a2676ef1e938",
        "name": "Code4"
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "ID": "={{ $('Execute>3600').item.json.ID }}",
              "outline": "={{ $json.message }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent1",
                "displayName": "competitorContent1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent2",
                "displayName": "competitorContent2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "index",
                "displayName": "index",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "logprobs",
                "displayName": "logprobs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "finish_reason",
                "displayName": "finish_reason",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -380,
          800
        ],
        "id": "88f3b58f-0ba5-4482-befc-b5821c70a416",
        "name": "Append or update row in sheet",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "outline": "={{ $json.competitorContent2 }} {{ $json.competitorContent1 }}",
              "ID": "={{ $('Execute>3600').first().json.ID }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent1",
                "displayName": "competitorContent1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorContent2",
                "displayName": "competitorContent2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "index",
                "displayName": "index",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "logprobs",
                "displayName": "logprobs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "finish_reason",
                "displayName": "finish_reason",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "row_number",
                "displayName": "row_number",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "readOnly": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -2090,
          350
        ],
        "id": "8154b7e5-4380-4ebc-93ba-c8deca96e5c1",
        "name": "Update row in sheet",
        "alwaysOutputData": true,
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18oVOz_tfdmTyMzjlFIWWNK7D3wPkypxs2GGWUR85ls4/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "outline": "={{ $json.message.content }}",
              "ID": "={{ $('Merge').item.json.ID }}",
              "Execute": "No"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -2090,
          2025
        ],
        "id": "6143adb6-f778-422a-bea0-10c7a628bfbd",
        "name": "Append or update row in sheet1",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "WKXRFtWM7GXhM0CE",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "amount": 2
        },
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          -1948,
          3185
        ],
        "id": "4a07a993-6372-40d9-8717-6da51606c830",
        "name": "Wait1",
        "webhookId": "ed1d5322-e19f-48d3-b2ab-32212b8d33fb"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 1
            },
            "conditions": [
              {
                "id": "59e569b0-af67-4c50-a7b3-0da4159d8bc9",
                "leftValue": "",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "and"
          },
          "looseTypeValidation": "={{ \n  $json.mainKeyword && \n  $json.articleSize &&\n  $json.articleWordCount &&\n  $json.competitorURL1\n  $json.Execute == \"Yes\"\n}}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -4680,
          1425
        ],
        "id": "90fcde84-dcbe-4b72-bcfb-7a9686c7f0ca",
        "name": "If2"
      },
      {
        "parameters": {
          "modelId": {
            "__rl": true,
            "value": "gpt-4.1-nano",
            "mode": "list",
            "cachedResultName": "GPT-4.1-NANO"
          },
          "messages": {
            "values": [
              {
                "content": "Analyze the provided content and generate SEO metadata optimized for Pixabay image searches. Focus on concrete, visual elements that exist in stock photography.\n\n**Requirements:**\n- main_keyword: A short phrase of **1 to 4 common stock photo keywords** (lowercase, no punctuation). Only include **tangible visual subjects** (e.g., people, actions, objects, settings). Avoid abstract ideas or long descriptions.\n- image_name: Descriptive filename using hyphens, ending with `.webp`.\n- alt_text: A full-sentence, natural description of what a photo of this scene would show, as seen on stock sites.\n\n**Output valid JSON in exactly this format:**\n{\n  \"main_keyword\": \"concrete visual terms here\",\n  \"image_name\": \"descriptive-filename.webp\", \n  \"alt_text\": \"detailed description of image content\"\n}\n\n**Good main_keyword examples:**\n- \"doctor patient consultation\"\n- \"healthcare professional\"\n- \"medical appointment\"\n- \"hospital front desk\"\n- \"nurse using computer\"\n- \"business meeting handshake\"\n\n**Bad main_keyword examples (DO NOT USE):**\n- \"secure patient data access\"\n- \"streamlining administrative workflows\"\n- \"digital transformation\"\n- \"FMC4Me platform login\"\n\nAvoid brand names, abstract concepts, or tech jargon. Focus on what a photographer could literally capture in one image.\n\n**Requirements:**\n- main_keyword: Create specific search terms using common stock photo keywords (avoid brand names, use generic visual elements)\n- image_name: Descriptive filename with hyphens, ending with .webp\n- alt_text: Comprehensive description of what the image shows\n\n**Output only valid JSON in this exact format:**\n{\n  \"main_keyword\": \"specific visual elements separated by spaces\",\n  \"image_name\": \"descriptive-filename.webp\", \n  \"alt_text\": \"detailed description of image content\"\n}\n\n**For main_keyword, use concrete visual terms like:**\n- For healthcare: \"doctor patient consultation\" or \"medical technology\" or \"healthcare professional\"\n- For business: \"business meeting\" or \"office workspace\" or \"professional handshake\"\n- For technology: \"laptop computer screen\" or \"smartphone app interface\" or \"digital dashboard\"\n- For finance: \"financial charts graphs\" or \"banking calculator\" or \"investment analysis\"\n\n**Avoid abstract concepts, brand names, or platform-specific terms. Focus on what photographers would actually capture.**\n\nGenerate the JSON for the provided content now.",
                "role": "system"
              },
              {
                "content": "={{ $('AIContenteWriter1').item.json.output }}"
              }
            ]
          },
          "simplify": false,
          "jsonOutput": "",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.openAi",
        "typeVersion": 1.8,
        "position": [
          -2324,
          3185
        ],
        "id": "fc928a08-737e-4bcb-9a2f-9ce2c8429880",
        "name": "Message a model",
        "alwaysOutputData": false,
        "credentials": {
          "openAiApi": {
            "id": "JzL8V7JW3E5uZM23",
            "name": "OpenAi account 3"
          }
        }
      },
      {
        "parameters": {
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY",
            "mode": "list",
            "cachedResultName": "Copy of Copy of n8n Content Creation",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FndZdichmTIZbnUHCC7W_WAVECtEZBjG6N5sTWTteeY/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1320509445,
            "mode": "list",
            "cachedResultName": "Master",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18oVOz_tfdmTyMzjlFIWWNK7D3wPkypxs2GGWUR85ls4/edit#gid=1320509445"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "wordpressTitle": "={{ $json.title.rendered }}",
              "outlineApproved": "done",
              "wordpressURL": "={{ $json.link }}",
              "wordpressDate": "={{ $json.date }}",
              "ID": "={{ $('If3').first().json.ID }}"
            },
            "matchingColumns": [
              "ID"
            ],
            "schema": [
              {
                "id": "ID",
                "displayName": "ID",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "mainTitle",
                "displayName": "mainTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "mainKeyword",
                "displayName": "mainKeyword",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "relatedKeywords",
                "displayName": "relatedKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "articleWordCount",
                "displayName": "articleWordCount",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "articleSize",
                "displayName": "articleSize",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "Execute",
                "displayName": "Execute",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "semanticKeywords1",
                "displayName": "semanticKeywords1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "semanticKeywords2",
                "displayName": "semanticKeywords2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "competitorURL1",
                "displayName": "competitorURL1",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "competitorURL2",
                "displayName": "competitorURL2",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "competitorArticles",
                "displayName": "competitorArticles",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "competitorKeywords",
                "displayName": "competitorKeywords",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "outlinePrompt",
                "displayName": "outlinePrompt",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "outline",
                "displayName": "outline",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "outlineApproved",
                "displayName": "outlineApproved",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "wordpressTitle",
                "displayName": "wordpressTitle",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "wordpressURL",
                "displayName": "wordpressURL",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "wordpressDate",
                "displayName": "wordpressDate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "toneOfVoice",
                "displayName": "toneOfVoice",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "pointOfView",
                "displayName": "pointOfView",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "textReadability",
                "displayName": "textReadability",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "detailsToInclude",
                "displayName": "detailsToInclude",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "introductionHook",
                "displayName": "introductionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "conclusionHook",
                "displayName": "conclusionHook",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "FAQs",
                "displayName": "FAQs",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          -1068,
          2860
        ],
        "id": "dfec56dd-905c-4114-bdbd-e5bcd46822a3",
        "name": "Append or update row in sheet2",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "cG5JxxSoXZzppn2M",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "tableName": {
            "__rl": true,
            "value": "content_jobs",
            "mode": "list",
            "cachedResultName": "content_jobs"
          },
          "additionalFields": {},
          "options": {
            "connectionTimeout": 60,
            "delayClosingIdleConnection": 40
          }
        },
        "type": "n8n-nodes-base.postgresTrigger",
        "typeVersion": 1,
        "position": [
          -5860,
          2280
        ],
        "id": "bf426260-198f-44cd-9fec-93aad3a0ba66",
        "name": "Postgres Trigger",
        "notesInFlow": true,
        "credentials": {
          "postgres": {
            "id": "NLsrOWdi5LSyHfTO",
            "name": "Postgres account"
          }
        },
        "notes": "how does it display nya"
      },
      {
        "parameters": {
          "triggerTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          }
        },
        "id": "df5b3e91-aac7-453d-b974-70ce5b9d224c",
        "name": "Cron",
        "type": "n8n-nodes-base.cron",
        "typeVersion": 1,
        "position": [
          -5240,
          1700
        ]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT *\nFROM public.content_jobs\nWHERE status = 'pending'\nORDER BY created_at DESC\nLIMIT 10;\n",
          "additionalFields": {}
        },
        "id": "245c93b0-47eb-4b2f-8a5e-804fbc71ebf6",
        "name": "PostgreSQL Select",
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 1,
        "position": [
          -5000,
          1700
        ],
        "credentials": {
          "postgres": {
            "id": "NLsrOWdi5LSyHfTO",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE public.content_jobs\nSET status = 'done'\nWHERE id = {{$json[\"id\"]}};\n",
          "additionalFields": {}
        },
        "id": "074205f4-af2b-4c10-8f86-04e177d71e09",
        "name": "PostgreSQL Update",
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 1,
        "position": [
          -3920,
          2440
        ],
        "credentials": {
          "postgres": {
            "id": "NLsrOWdi5LSyHfTO",
            "name": "Postgres account"
          }
        }
      }
    ],
    "connections": {
      "Google Sheets Trigger3": {
        "main": [
          [
            {
              "node": "If_Approved1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If3": {
        "main": [
          [
            {
              "node": "Introduction1",
              "type": "main",
              "index": 0
            },
            {
              "node": "Code6",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "No Operation, do nothing8",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Split Out1": {
        "main": [
          [
            {
              "node": "Loop Over Items2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wordpress1": {
        "main": [
          [
            {
              "node": "Append or update row in sheet2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "AIContenteWriter1": {
        "main": [
          [
            {
              "node": "Code1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Items2": {
        "main": [
          [
            {
              "node": "Aggregate1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Code7",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate1": {
        "main": [
          [
            {
              "node": "coreContent_code3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code6": {
        "main": [
          [
            {
              "node": "Split Out1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code7": {
        "main": [
          [
            {
              "node": "AIContenteWriter1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Introduction1": {
        "main": [
          [
            {
              "node": "coreContent_code4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "joinArticle1": {
        "main": [
          [
            {
              "node": "Code8",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "joinArticle_code1": {
        "main": [
          [
            {
              "node": "Code9",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "coreContent_code3": {
        "main": [
          [
            {
              "node": "rename_mainContent1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "rename_mainContent1": {
        "main": [
          [
            {
              "node": "joinArticle1",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Code8": {
        "main": [
          [
            {
              "node": "joinArticle_code1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Items3": {
        "main": [
          [
            {
              "node": "No Operation, do nothing9",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "If3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If_Approved1": {
        "main": [
          [
            {
              "node": "Limit1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "No Operation, do nothing10",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code9": {
        "main": [
          [
            {
              "node": "Wordpress1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Limit1": {
        "main": [
          [
            {
              "node": "Loop Over Items3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "Introduction1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Structured Output Parser": {
        "ai_outputParser": [
          [
            {
              "node": "Introduction1",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "coreContent_code4": {
        "main": [
          [
            {
              "node": "joinArticle1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI Chat Model1": {
        "ai_languageModel": [
          [
            {
              "node": "AIContenteWriter1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Stock Image URL": {
        "main": [
          [
            {
              "node": "template image generator",
              "type": "main",
              "index": 0
            }
          ],
          []
        ]
      },
      "HTTP Request": {
        "main": [
          [
            {
              "node": "Code:Image tag insertion",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code": {
        "main": [
          [
            {
              "node": "Stock Image URL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code:Image tag insertion": {
        "main": [
          [
            {
              "node": "Wait5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait5": {
        "main": [
          [
            {
              "node": "Loop Over Items2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "template image generator": {
        "main": [
          [
            {
              "node": "Code2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code1": {
        "main": [
          [
            {
              "node": "Message a model",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code2": {
        "main": [
          [
            {
              "node": "HTTP Request",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Sheets Trigger2": {
        "main": [
          [
            {
              "node": "If2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "wordCount(<>3600)": {
        "main": [
          [
            {
              "node": "Loop_Till_All_Content1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Loop_Till_All_Content2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "competitorKeywords": {
        "main": [
          [
            {
              "node": "Competitor Google Sheets1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Competitor Google Sheets1": {
        "main": [
          [
            {
              "node": "Merge4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywords1 Google Sheets1": {
        "main": [
          [
            {
              "node": "Merge4",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "semanticKeywords2 Google Sheets1": {
        "main": [
          [
            {
              "node": "Merge5",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Merge4": {
        "main": [
          [
            {
              "node": "Merge5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge5": {
        "main": [
          [
            {
              "node": "Outline Generation1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Outline Generation1": {
        "main": [
          [
            {
              "node": "Append or update row in sheet",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait3": {
        "main": [
          [
            {
              "node": "semanticKeywordsMain",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait4": {
        "main": [
          [
            {
              "node": "semanticKeywordsRelated",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop_Till_All_Content1": {
        "main": [
          [
            {
              "node": "No Operation, do nothing7",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute>3600",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "1stExecute(Yes/No)": {
        "main": [
          [
            {
              "node": "wordCount(<>3600)",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "No Operation, do nothing6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute>3600": {
        "main": [
          [
            {
              "node": "Wait3",
              "type": "main",
              "index": 0
            },
            {
              "node": "Wait4",
              "type": "main",
              "index": 0
            },
            {
              "node": "HTTP Request1",
              "type": "main",
              "index": 0
            },
            {
              "node": "HTTP Request2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "competitorURL2-Content1": {
        "main": [
          [
            {
              "node": "competitorURL2-HTML",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "competitorURL1-Content1": {
        "main": [
          [
            {
              "node": "competitorURL1-HTML",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "competitorURL1-HTML": {
        "main": [
          [
            {
              "node": "MergeCompetitorURLs",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "competitorURL2-HTML": {
        "main": [
          [
            {
              "node": "MergeCompetitorURLs",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "MergeCompetitorURLs": {
        "main": [
          [
            {
              "node": "Update row in sheet",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model4": {
        "ai_languageModel": [
          [
            {
              "node": "competitorKeywords",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model5": {
        "ai_languageModel": [
          [
            {
              "node": "semanticKeywordsMain",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model6": {
        "ai_languageModel": [
          [
            {
              "node": "semanticKeywordsRelated",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Edit Fields1": {
        "main": [
          [
            {
              "node": "semanticKeywords1 Google Sheets1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Edit Fields2": {
        "main": [
          [
            {
              "node": "semanticKeywords2 Google Sheets1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywordsRelated": {
        "main": [
          [
            {
              "node": "Edit Fields2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywordsMain": {
        "main": [
          [
            {
              "node": "Edit Fields1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait8": {
        "main": [
          [
            {
              "node": "semanticKeywordsMain1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywordsMain1": {
        "main": [
          [
            {
              "node": "Edit Fields",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "semanticKeywordsMain1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Edit Fields": {
        "main": [
          [
            {
              "node": "semanticKeywords1 Google Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywords1 Google Sheets": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait": {
        "main": [
          [
            {
              "node": "semanticKeywordsRelated1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywordsRelated1": {
        "main": [
          [
            {
              "node": "Edit Fields3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model1": {
        "ai_languageModel": [
          [
            {
              "node": "semanticKeywordsRelated1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Edit Fields3": {
        "main": [
          [
            {
              "node": "semanticKeywords2 Google Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "semanticKeywords2 Google Sheets": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Merge": {
        "main": [
          [
            {
              "node": "Outline Generation",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Outline Generation": {
        "main": [
          [
            {
              "node": "Append or update row in sheet1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request1": {
        "main": [
          [
            {
              "node": "If",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request2": {
        "main": [
          [
            {
              "node": "If1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If": {
        "main": [
          [
            {
              "node": "Code3",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "competitorURL1-Content1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If1": {
        "main": [
          [
            {
              "node": "Code4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "competitorURL2-Content1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop_Till_All_Content2": {
        "main": [
          [
            {
              "node": "No Operation, do nothing",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Wait8",
              "type": "main",
              "index": 0
            },
            {
              "node": "Wait",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code3": {
        "main": [
          [
            {
              "node": "MergeCompetitorURLs",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code4": {
        "main": [
          [
            {
              "node": "MergeCompetitorURLs",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Append or update row in sheet": {
        "main": [
          [
            {
              "node": "Loop_Till_All_Content1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update row in sheet": {
        "main": [
          [
            {
              "node": "competitorKeywords",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Append or update row in sheet1": {
        "main": [
          [
            {
              "node": "Loop_Till_All_Content2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait1": {
        "main": [
          [
            {
              "node": "Code",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If2": {
        "main": [
          [
            {
              "node": "1stExecute(Yes/No)",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "No Operation, do nothing6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Message a model": {
        "main": [
          [
            {
              "node": "Wait1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Append or update row in sheet2": {
        "main": [
          [
            {
              "node": "If_Approved1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Cron": {
        "main": [
          [
            {
              "node": "PostgreSQL Select",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "PostgreSQL Select": {
        "main": [
          [
            {
              "node": "If2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "67a489d5404a50a692d257ee7f5e66a3d35670bd329c876cd60cacdbeb576b11"
    }
  }